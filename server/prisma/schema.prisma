datasource postgres {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  createdAt DateTime  @default(now())
  firstName String?
  id        String    @id @default(cuid())
  invoices  Invoice[]
  lastName  String?
  password  String
  products  Product[]
  roles     Json
  updatedAt DateTime  @updatedAt
  username  String    @unique
}

model Customer {
  addresses   Address[]
  companyName String?
  createdAt   DateTime  @default(now())
  email       String?
  firstName   String?
  id          String    @id @default(cuid())
  invoice     Invoice[]
  lastName    String?
  phone       String?
  updatedAt   DateTime  @updatedAt
}

model Address {
  address_1  String?
  address_2  String?
  city       String?
  createdAt  DateTime  @default(now())
  customer   Customer? @relation(fields: [customerId], references: [id])
  customerId String?
  id         String    @id @default(cuid())
  state      String?
  updatedAt  DateTime  @updatedAt
  zip        Int?
}

model Product {
  createdAt   DateTime @default(now())
  description String?
  id          String   @id @default(cuid())
  itemPrice   Float?
  items       Item?    @relation(fields: [itemsId], references: [id])
  itemsId     String?
  name        String?
  updatedAt   DateTime @updatedAt
  user        User?    @relation(fields: [userId], references: [id])
  userId      String?
}

model Invoice {
  createdAt DateTime   @default(now())
  customers Customer[]
  id        String     @id @default(cuid())
  items     Item[]
  updatedAt DateTime   @updatedAt
  user      User?      @relation(fields: [userId], references: [id])
  userId    String?
}

model Item {
  createdAt DateTime  @default(now())
  id        String    @id @default(cuid())
  invoice   Invoice?  @relation(fields: [invoiceId], references: [id])
  invoiceId String?
  product   Product[]
  updatedAt DateTime  @updatedAt
}